import Head from "next/head";
import MainLayout from "@/components/Layout/MainLayout";
import productsService from "@/api/products-service/products-service";
import Cards from "@/components/Cards/Cards";
import {IProduct} from "@/components/Cards/Cards-types";
import classes from "../styles/Home.module.scss";
import useLocalStorage from "@/customHooks/useLocalStorage";

type InitialProps = {
    products: IProduct[]
}
export default function Index({products}: InitialProps) {
     const [cartItems, setCartItems] = useLocalStorage("products", []);
     const [numberOfFavorites, setNumberOfFavourites] = useLocalStorage("favoritesNumber", 0);

     return (
        <div className={classes.wrapper}>
            <MainLayout cartItems={cartItems} numberOfFavorites={numberOfFavorites}>
                <Head>
                    <title>Online store</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <link rel="icon" href="/online-store.ico" />
                    <link
                        href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
                        rel="stylesheet" />

                </Head>
                {!products && <p>Loading...</p>}
                <Cards
                    products={products}
                    numberOfFavorites={numberOfFavorites}
                    setNumberOfFavourites={setNumberOfFavourites}
                    cartItems={cartItems}
                    setCartItems={setCartItems}
                />
            </MainLayout>
        </div>
    )
}
Index.getInitialProps = async () => {
    try {
        const data = await productsService.getAllProducts();
        const products = data?.map((item) => {
            return {
                ...item,
                count: 1,
                totalPrice: Number(item.price)
            }
        })
        return {products};
    } catch(e) {
        console.warn(e);
        throw new Error();
    }
}